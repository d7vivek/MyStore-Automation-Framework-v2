<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-07-29T14:50:55 IST" name="Suite" finished-at="2025-07-29T14:51:31 IST" duration-ms="36022">
    <groups>
    </groups>
    <test started-at="2025-07-29T14:50:55 IST" name="Test" finished-at="2025-07-29T14:51:31 IST" duration-ms="36022">
      <class name="tests.Login">
        <test-method is-config="true" signature="setupExtentReport()[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:50:55 IST" name="setupExtentReport" finished-at="2025-07-29T14:50:55 IST" duration-ms="208" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupExtentReport -->
        <test-method is-config="true" signature="setupLogin()[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:50:55 IST" name="setupLogin" finished-at="2025-07-29T14:50:58 IST" duration-ms="2846" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogin -->
        <test-method signature="loginWithValidCredentials()[pri:1, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:50:58 IST" name="loginWithValidCredentials" finished-at="2025-07-29T14:50:59 IST" duration-ms="998" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithValidCredentials -->
        <test-method is-config="true" signature="tearDownCustom(org.testng.ITestResult)[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:50:59 IST" name="tearDownCustom" finished-at="2025-07-29T14:50:59 IST" duration-ms="162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithValidCredentials status=SUCCESS method=Login.loginWithValidCredentials()[pri:1, instance:tests.Login@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownCustom -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:50:59 IST" name="tearDown" finished-at="2025-07-29T14:50:59 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithValidCredentials status=SUCCESS method=Login.loginWithValidCredentials()[pri:1, instance:tests.Login@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setupLogin()[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:50:59 IST" name="setupLogin" finished-at="2025-07-29T14:51:01 IST" duration-ms="2062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogin -->
        <test-method signature="loginWithInvalidUsername()[pri:2, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:01 IST" name="loginWithInvalidUsername" finished-at="2025-07-29T14:51:02 IST" duration-ms="1040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidUsername -->
        <test-method is-config="true" signature="tearDownCustom(org.testng.ITestResult)[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:02 IST" name="tearDownCustom" finished-at="2025-07-29T14:51:02 IST" duration-ms="132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithInvalidUsername status=SUCCESS method=Login.loginWithInvalidUsername()[pri:2, instance:tests.Login@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownCustom -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:02 IST" name="tearDown" finished-at="2025-07-29T14:51:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithInvalidUsername status=SUCCESS method=Login.loginWithInvalidUsername()[pri:2, instance:tests.Login@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setupLogin()[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:02 IST" name="setupLogin" finished-at="2025-07-29T14:51:05 IST" duration-ms="2299" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogin -->
        <test-method signature="loginWithInvalidPassword()[pri:3, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:05 IST" name="loginWithInvalidPassword" finished-at="2025-07-29T14:51:05 IST" duration-ms="834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidPassword -->
        <test-method is-config="true" signature="tearDownCustom(org.testng.ITestResult)[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:05 IST" name="tearDownCustom" finished-at="2025-07-29T14:51:06 IST" duration-ms="134" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithInvalidPassword status=SUCCESS method=Login.loginWithInvalidPassword()[pri:3, instance:tests.Login@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownCustom -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:06 IST" name="tearDown" finished-at="2025-07-29T14:51:06 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithInvalidPassword status=SUCCESS method=Login.loginWithInvalidPassword()[pri:3, instance:tests.Login@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setupLogin()[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:06 IST" name="setupLogin" finished-at="2025-07-29T14:51:08 IST" duration-ms="2088" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogin -->
        <test-method signature="loginWithInvalidUsernamePassword()[pri:4, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:08 IST" name="loginWithInvalidUsernamePassword" finished-at="2025-07-29T14:51:08 IST" duration-ms="516" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidUsernamePassword -->
        <test-method is-config="true" signature="tearDownCustom(org.testng.ITestResult)[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:08 IST" name="tearDownCustom" finished-at="2025-07-29T14:51:08 IST" duration-ms="143" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithInvalidUsernamePassword status=SUCCESS method=Login.loginWithInvalidUsernamePassword()[pri:4, instance:tests.Login@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownCustom -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:08 IST" name="tearDown" finished-at="2025-07-29T14:51:08 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithInvalidUsernamePassword status=SUCCESS method=Login.loginWithInvalidUsernamePassword()[pri:4, instance:tests.Login@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setupLogin()[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:08 IST" name="setupLogin" finished-at="2025-07-29T14:51:10 IST" duration-ms="2108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupLogin -->
        <test-method signature="loginWithBlankUsernamePassword()[pri:5, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:10 IST" name="loginWithBlankUsernamePassword" finished-at="2025-07-29T14:51:11 IST" duration-ms="791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithBlankUsernamePassword -->
        <test-method is-config="true" signature="tearDownCustom(org.testng.ITestResult)[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:11 IST" name="tearDownCustom" finished-at="2025-07-29T14:51:11 IST" duration-ms="132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithBlankUsernamePassword status=SUCCESS method=Login.loginWithBlankUsernamePassword()[pri:5, instance:tests.Login@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownCustom -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:11 IST" name="tearDown" finished-at="2025-07-29T14:51:11 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginWithBlankUsernamePassword status=SUCCESS method=Login.loginWithBlankUsernamePassword()[pri:5, instance:tests.Login@4a07d605] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:tests.Login@4a07d605]" started-at="2025-07-29T14:51:31 IST" name="tearDown" finished-at="2025-07-29T14:51:35 IST" duration-ms="4380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Login -->
      <class name="tests.Search">
        <test-method is-config="true" signature="setupRegister()[pri:0, instance:tests.Search@47c81abf]" started-at="2025-07-29T14:51:11 IST" name="setupRegister" finished-at="2025-07-29T14:51:14 IST" duration-ms="2888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRegister -->
        <test-method signature="searchForValidProduct()[pri:1, instance:tests.Search@47c81abf]" started-at="2025-07-29T14:51:14 IST" name="searchForValidProduct" finished-at="2025-07-29T14:51:15 IST" duration-ms="487" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchForValidProduct -->
        <test-method is-config="true" signature="tearDownCustom(org.testng.ITestResult)[pri:0, instance:tests.Search@47c81abf]" started-at="2025-07-29T14:51:15 IST" name="tearDownCustom" finished-at="2025-07-29T14:51:15 IST" duration-ms="122" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchForValidProduct status=SUCCESS method=Search.searchForValidProduct()[pri:1, instance:tests.Search@47c81abf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownCustom -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Search@47c81abf]" started-at="2025-07-29T14:51:15 IST" name="tearDown" finished-at="2025-07-29T14:51:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchForValidProduct status=SUCCESS method=Search.searchForValidProduct()[pri:1, instance:tests.Search@47c81abf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setupRegister()[pri:0, instance:tests.Search@47c81abf]" started-at="2025-07-29T14:51:15 IST" name="setupRegister" finished-at="2025-07-29T14:51:17 IST" duration-ms="2328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRegister -->
        <test-method signature="searchWithInvalidProduct()[pri:2, instance:tests.Search@47c81abf]" started-at="2025-07-29T14:51:17 IST" name="searchWithInvalidProduct" finished-at="2025-07-29T14:51:18 IST" duration-ms="388" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithInvalidProduct -->
        <test-method is-config="true" signature="tearDownCustom(org.testng.ITestResult)[pri:0, instance:tests.Search@47c81abf]" started-at="2025-07-29T14:51:18 IST" name="tearDownCustom" finished-at="2025-07-29T14:51:18 IST" duration-ms="153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchWithInvalidProduct status=SUCCESS method=Search.searchWithInvalidProduct()[pri:2, instance:tests.Search@47c81abf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownCustom -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Search@47c81abf]" started-at="2025-07-29T14:51:18 IST" name="tearDown" finished-at="2025-07-29T14:51:18 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchWithInvalidProduct status=SUCCESS method=Search.searchWithInvalidProduct()[pri:2, instance:tests.Search@47c81abf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setupRegister()[pri:0, instance:tests.Search@47c81abf]" started-at="2025-07-29T14:51:18 IST" name="setupRegister" finished-at="2025-07-29T14:51:20 IST" duration-ms="2277" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRegister -->
        <test-method signature="searchWithNoProduct()[pri:3, instance:tests.Search@47c81abf]" started-at="2025-07-29T14:51:20 IST" name="searchWithNoProduct" finished-at="2025-07-29T14:51:20 IST" duration-ms="353" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[No product message is not as expected. expected [There is no product that matches the search criteria.***] but found [There is no product that matches the search criteria.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: No product message is not as expected. expected [There is no product that matches the search criteria.***] but found [There is no product that matches the search criteria.]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at tests.Search.searchWithNoProduct(Search.java:70)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:569)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchWithNoProduct -->
        <test-method is-config="true" signature="tearDownCustom(org.testng.ITestResult)[pri:0, instance:tests.Search@47c81abf]" started-at="2025-07-29T14:51:20 IST" name="tearDownCustom" finished-at="2025-07-29T14:51:21 IST" duration-ms="137" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchWithNoProduct status=FAILURE method=Search.searchWithNoProduct()[pri:3, instance:tests.Search@47c81abf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownCustom -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Search@47c81abf]" started-at="2025-07-29T14:51:21 IST" name="tearDown" finished-at="2025-07-29T14:51:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchWithNoProduct status=FAILURE method=Search.searchWithNoProduct()[pri:3, instance:tests.Search@47c81abf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Search -->
      <class name="tests.Register">
        <test-method is-config="true" signature="setupRegister()[pri:0, instance:tests.Register@776a6d9b]" started-at="2025-07-29T14:51:21 IST" name="setupRegister" finished-at="2025-07-29T14:51:23 IST" duration-ms="2150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRegister -->
        <test-method signature="registerWithAllfield()[pri:1, instance:tests.Register@776a6d9b]" started-at="2025-07-29T14:51:23 IST" name="registerWithAllfield" finished-at="2025-07-29T14:51:24 IST" duration-ms="1300" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithAllfield -->
        <test-method is-config="true" signature="tearDownCustom(org.testng.ITestResult)[pri:0, instance:tests.Register@776a6d9b]" started-at="2025-07-29T14:51:24 IST" name="tearDownCustom" finished-at="2025-07-29T14:51:24 IST" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerWithAllfield status=SUCCESS method=Register.registerWithAllfield()[pri:1, instance:tests.Register@776a6d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownCustom -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Register@776a6d9b]" started-at="2025-07-29T14:51:24 IST" name="tearDown" finished-at="2025-07-29T14:51:24 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerWithAllfield status=SUCCESS method=Register.registerWithAllfield()[pri:1, instance:tests.Register@776a6d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setupRegister()[pri:0, instance:tests.Register@776a6d9b]" started-at="2025-07-29T14:51:24 IST" name="setupRegister" finished-at="2025-07-29T14:51:26 IST" duration-ms="2200" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRegister -->
        <test-method signature="registerWithMandatoryField()[pri:2, instance:tests.Register@776a6d9b]" started-at="2025-07-29T14:51:26 IST" name="registerWithMandatoryField" finished-at="2025-07-29T14:51:28 IST" duration-ms="1322" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithMandatoryField -->
        <test-method is-config="true" signature="tearDownCustom(org.testng.ITestResult)[pri:0, instance:tests.Register@776a6d9b]" started-at="2025-07-29T14:51:28 IST" name="tearDownCustom" finished-at="2025-07-29T14:51:28 IST" duration-ms="127" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerWithMandatoryField status=SUCCESS method=Register.registerWithMandatoryField()[pri:2, instance:tests.Register@776a6d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownCustom -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Register@776a6d9b]" started-at="2025-07-29T14:51:28 IST" name="tearDown" finished-at="2025-07-29T14:51:28 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerWithMandatoryField status=SUCCESS method=Register.registerWithMandatoryField()[pri:2, instance:tests.Register@776a6d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setupRegister()[pri:0, instance:tests.Register@776a6d9b]" started-at="2025-07-29T14:51:28 IST" name="setupRegister" finished-at="2025-07-29T14:51:30 IST" duration-ms="2387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupRegister -->
        <test-method signature="registerWithoutEnteringAnyDetails()[pri:3, instance:tests.Register@776a6d9b]" started-at="2025-07-29T14:51:30 IST" name="registerWithoutEnteringAnyDetails" finished-at="2025-07-29T14:51:31 IST" duration-ms="602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithoutEnteringAnyDetails -->
        <test-method is-config="true" signature="tearDownCustom(org.testng.ITestResult)[pri:0, instance:tests.Register@776a6d9b]" started-at="2025-07-29T14:51:31 IST" name="tearDownCustom" finished-at="2025-07-29T14:51:31 IST" duration-ms="138" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerWithoutEnteringAnyDetails status=SUCCESS method=Register.registerWithoutEnteringAnyDetails()[pri:3, instance:tests.Register@776a6d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownCustom -->
        <test-method is-config="true" signature="tearDown(org.testng.ITestResult)[pri:0, instance:tests.Register@776a6d9b]" started-at="2025-07-29T14:51:31 IST" name="tearDown" finished-at="2025-07-29T14:51:31 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=registerWithoutEnteringAnyDetails status=SUCCESS method=Register.registerWithoutEnteringAnyDetails()[pri:3, instance:tests.Register@776a6d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.Register -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
